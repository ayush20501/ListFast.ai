# Generated by Django 5.2.6 on 2025-09-25 20:01

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="eBayToken",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("access_token", models.TextField(blank=True, null=True)),
                ("refresh_token", models.TextField(blank=True, null=True)),
                ("expires_at", models.FloatField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="ListingCount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("total_count", models.IntegerField(default=0)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "address_line1",
                    models.CharField(
                        max_length=200,
                        validators=[django.core.validators.MinLengthValidator(1)],
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        max_length=100,
                        validators=[django.core.validators.MinLengthValidator(1)],
                    ),
                ),
                (
                    "postal_code",
                    models.CharField(
                        max_length=20,
                        validators=[django.core.validators.MinLengthValidator(1)],
                    ),
                ),
                ("country", models.CharField(default="GB", max_length=2)),
                ("profile_pic_url", models.URLField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="OTP",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "otp",
                    models.CharField(
                        max_length=6,
                        validators=[django.core.validators.RegexValidator("^\\d{6}$")],
                    ),
                ),
                ("expires_at", models.DateTimeField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TaskRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("task_id", models.CharField(max_length=100, unique=True)),
                ("name", models.CharField(max_length=100)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "PENDING"),
                            ("STARTED", "STARTED"),
                            ("SUCCESS", "SUCCESS"),
                            ("FAILURE", "FAILURE"),
                            ("RETRY", "RETRY"),
                            ("REVOKED", "REVOKED"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("payload", models.JSONField(blank=True, null=True)),
                ("result", models.JSONField(blank=True, null=True)),
                ("error", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="UserListing",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("listing_id", models.CharField(max_length=50)),
                ("offer_id", models.CharField(blank=True, max_length=50, null=True)),
                ("sku", models.CharField(blank=True, max_length=50, null=True)),
                ("title", models.CharField(max_length=80)),
                (
                    "price_value",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("price_currency", models.CharField(default="GBP", max_length=3)),
                ("quantity", models.IntegerField(blank=True, null=True)),
                ("condition", models.CharField(blank=True, max_length=20, null=True)),
                ("category_id", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "category_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "marketplace_id",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("view_url", models.URLField(blank=True, null=True)),
                ("status", models.CharField(default="ACTIVE", max_length=20)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("vat_rate", models.FloatField(blank=True, default=0, null=True)),
                (
                    "listing_type",
                    models.CharField(
                        choices=[
                            ("Single", "Single"),
                            ("Multi", "Multi"),
                            ("Bundle", "Bundle"),
                        ],
                        default="Single",
                        max_length=20,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "listing_id")},
            },
        ),
    ]
